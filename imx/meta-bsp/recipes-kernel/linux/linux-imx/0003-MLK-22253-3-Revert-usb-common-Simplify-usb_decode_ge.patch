From 7104a982c49fc4d6513d50da675aee6c81fba325 Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@nxp.com>
Date: Thu, 11 Jul 2019 17:20:11 +0800
Subject: [PATCH 03/52] MLK-22253-3 Revert "usb: common: Simplify
 usb_decode_get_set_descriptor function."

This reverts commit 4b5ea5b5f492559928ff2a179a1a6b82ca4857a7,
which is for imx8qxp C0.

Signed-off-by: Peter Chen <peter.chen@nxp.com>
---
 drivers/usb/common/debug.c | 113 ++++++++++++++++++-------------------
 1 file changed, 55 insertions(+), 58 deletions(-)

diff --git a/drivers/usb/common/debug.c b/drivers/usb/common/debug.c
index 8e2c81a40cf8..ad6c96aa45b0 100644
--- a/drivers/usb/common/debug.c
+++ b/drivers/usb/common/debug.c
@@ -105,65 +105,62 @@ static void usb_decode_get_set_descriptor(__u8 bRequestType, __u8 bRequest,
 					  __u16 wValue, __u16 wIndex,
 					  __u16 wLength, char *str, size_t size)
 {
-	char *s;
-
-	switch (wValue >> 8) {
-	case USB_DT_DEVICE:
-		s = "Device";
-		break;
-	case USB_DT_CONFIG:
-		s = "Configuration";
-		break;
-	case USB_DT_STRING:
-		s = "String";
-		break;
-	case USB_DT_INTERFACE:
-		s = "Interface";
-		break;
-	case USB_DT_ENDPOINT:
-		s = "Endpoint";
-		break;
-	case USB_DT_DEVICE_QUALIFIER:
-		s = "Device Qualifier";
-		break;
-	case USB_DT_OTHER_SPEED_CONFIG:
-		s = "Other Speed Config";
-		break;
-	case USB_DT_INTERFACE_POWER:
-		s = "Interface Power";
-		break;
-	case USB_DT_OTG:
-		s = "OTG";
-		break;
-	case USB_DT_DEBUG:
-		s = "Debug";
-		break;
-	case USB_DT_INTERFACE_ASSOCIATION:
-		s = "Interface Association";
-		break;
-	case USB_DT_BOS:
-		s = "BOS";
-		break;
-	case USB_DT_DEVICE_CAPABILITY:
-		s = "Device Capability";
-		break;
-	case USB_DT_PIPE_USAGE:
-		s = "Pipe Usage";
-		break;
-	case USB_DT_SS_ENDPOINT_COMP:
-		s = "SS Endpoint Companion";
-		break;
-	case USB_DT_SSP_ISOC_ENDPOINT_COMP:
-		s = "SSP Isochronous Endpoint Companion";
-		break;
-	default:
-		s = "UNKNOWN";
-		break;
-	}
-
 	snprintf(str, size, "%s %s Descriptor(Index = %d, Length = %d)",
-		bRequest == USB_REQ_GET_DESCRIPTOR ? "Get" : "Set",
-		s, wValue & 0xff, wLength);
+		 bRequest == USB_REQ_GET_DESCRIPTOR ? "Get" : "Set",
+		 ({ char *s;
+			switch (wValue >> 8) {
+			case USB_DT_DEVICE:
+				s = "Device";
+				break;
+			case USB_DT_CONFIG:
+				s = "Configuration";
+				break;
+			case USB_DT_STRING:
+				s = "String";
+				break;
+			case USB_DT_INTERFACE:
+				s = "Interface";
+				break;
+			case USB_DT_ENDPOINT:
+				s = "Endpoint";
+				break;
+			case USB_DT_DEVICE_QUALIFIER:
+				s = "Device Qualifier";
+				break;
+			case USB_DT_OTHER_SPEED_CONFIG:
+				s = "Other Speed Config";
+				break;
+			case USB_DT_INTERFACE_POWER:
+				s = "Interface Power";
+				break;
+			case USB_DT_OTG:
+				s = "OTG";
+				break;
+			case USB_DT_DEBUG:
+				s = "Debug";
+				break;
+			case USB_DT_INTERFACE_ASSOCIATION:
+				s = "Interface Association";
+				break;
+			case USB_DT_BOS:
+				s = "BOS";
+				break;
+			case USB_DT_DEVICE_CAPABILITY:
+				s = "Device Capability";
+				break;
+			case USB_DT_PIPE_USAGE:
+				s = "Pipe Usage";
+				break;
+			case USB_DT_SS_ENDPOINT_COMP:
+				s = "SS Endpoint Companion";
+				break;
+			case USB_DT_SSP_ISOC_ENDPOINT_COMP:
+				s = "SSP Isochronous Endpoint Companion";
+				break;
+			default:
+				s = "UNKNOWN";
+				break;
+			} s; }), wValue & 0xff, wLength);
 }
 
 static void usb_decode_get_configuration(__u16 wLength, char *str, size_t size)
-- 
2.17.1

