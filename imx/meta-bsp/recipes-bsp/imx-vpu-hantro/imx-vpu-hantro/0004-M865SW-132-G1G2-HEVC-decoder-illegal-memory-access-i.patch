From 9d2f23c6f011312256cc252f97e2c17441cbe299 Mon Sep 17 00:00:00 2001
From: Zhou Peng <eagle.zhou@nxp.com>
Date: Thu, 20 Feb 2020 11:16:03 +0800
Subject: [PATCH 4/9] M865SW-132: [G1G2]: HEVC decoder illegal memory access in
 security mode

Integarte VSI patch: M865SW-132_20200220.patch
- SwTurnAround() should be bypassed in non-ring buffer mode

Signed-off-by: Zhou Peng <eagle.zhou@nxp.com>
---
 decoder_sw/software/source/common/sw_stream.c | 23 ++++++++++++-------
 1 file changed, 15 insertions(+), 8 deletions(-)

diff --git a/decoder_sw/software/source/common/sw_stream.c b/decoder_sw/software/source/common/sw_stream.c
index c3a6214..284d55b 100755
--- a/decoder_sw/software/source/common/sw_stream.c
+++ b/decoder_sw/software/source/common/sw_stream.c
@@ -98,11 +98,14 @@ u32 SwShowBits(const struct StrmData *stream, u32 num_bits) {
     return (0);
   }
 
-  tmp = SwTurnAround(stream->strm_curr_pos, stream->strm_buff_start,
-                     tmp_strm_buf, stream->strm_buff_size,
-                     num_bits + stream->bit_pos_in_word + 32);
+  if (stream->is_rb) {
+    tmp = SwTurnAround(stream->strm_curr_pos, stream->strm_buff_start,
+                       tmp_strm_buf, stream->strm_buff_size,
+                       num_bits + stream->bit_pos_in_word + 32);
 
-  if(tmp != NULL) strm = tmp;
+    if(tmp != NULL)
+      strm = tmp;
+  }
 
   if (!stream->remove_emul3_byte) {
 
@@ -137,7 +140,8 @@ u32 SwShowBits(const struct StrmData *stream, u32 num_bits) {
         out |= (u32)DWLPrivateAreaReadByte(strm) << (24 - out_bits);
         strm++;
       } else {
-        out |= (u32)DWLPrivateAreaReadByte(strm) >> (out_bits - 24);
+        out |= (out_bits - 24) > 7 ? 0: 
+                   ((u32)DWLPrivateAreaReadByte(strm) >> (out_bits - 24));
         strm++;
       }
 
@@ -197,9 +201,12 @@ u32 SwFlushBits(struct StrmData *stream, u32 num_bits) {
   ASSERT(stream->bit_pos_in_word == (stream->strm_buff_read_bits & 0x7));
 
   /* used to copy stream data when ringbuffer turnaround */
-  tmp = SwTurnAround(stream->strm_curr_pos, stream->strm_buff_start,
-                     tmp_strm_buf, stream->strm_buff_size,
-                     num_bits + stream->bit_pos_in_word + 32);
+  if (stream->is_rb) {
+    tmp = SwTurnAround(stream->strm_curr_pos, stream->strm_buff_start,
+                       tmp_strm_buf, stream->strm_buff_size,
+                       num_bits + stream->bit_pos_in_word + 32);
+  } else
+    tmp = NULL;
 
   if (!stream->remove_emul3_byte) {
     if ((stream->strm_buff_read_bits + num_bits) >
-- 
2.17.1

