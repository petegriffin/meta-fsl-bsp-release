From 1c70eeafe97a99749e4fa04d23d1900e1a574bce Mon Sep 17 00:00:00 2001
From: Olivier Masse <olivier.masse@nxp.com>
Date: Fri, 13 Mar 2020 13:33:24 +0100
Subject: [PATCH 35/87] [core][driver][caam] SDP mem cache tested

Replace this commit by TEE-526 solution when done.

Signed-off-by: Olivier Masse <olivier.masse@nxp.com>
---
 core/drivers/crypto/caam/utils/utils_mem.c | 19 ++++---------------
 1 file changed, 4 insertions(+), 15 deletions(-)

diff --git a/core/drivers/crypto/caam/utils/utils_mem.c b/core/drivers/crypto/caam/utils/utils_mem.c
index 348c6723..1c541c2b 100644
--- a/core/drivers/crypto/caam/utils/utils_mem.c
+++ b/core/drivers/crypto/caam/utils/utils_mem.c
@@ -356,22 +356,11 @@ enum caam_status caam_sgtbuf_alloc(struct caamsgtbuf *data)
 
 bool caam_mem_is_cached_buf(void *buf, size_t size)
 {
-	enum teecore_memtypes mtype = MEM_AREA_MAXTYPE;
-	bool is_cached = false;
-
 	/*
-	 * First check if the buffer is a known memory area mapped
-	 * with a type listed in the teecore_memtypes enum.
-	 * If not mapped, this is a User Area and so assume
-	 * it cacheable
-	 */
-	mtype = core_mmu_get_type_by_pa(virt_to_phys(buf));
-	if (mtype == MEM_AREA_MAXTYPE)
-		is_cached = true;
-	else
-		is_cached = core_vbuf_is(CORE_MEM_CACHED, buf, size);
-
-	return is_cached;
+	OMS: Security issue
+	TODO: TEE-526 integration when done.
+	*/
+	return core_vbuf_is(CORE_MEM_CACHED, buf, size);
 }
 
 int caam_set_or_alloc_align_buf(void *orig, struct caambuf *dst, size_t size)
-- 
2.17.1

