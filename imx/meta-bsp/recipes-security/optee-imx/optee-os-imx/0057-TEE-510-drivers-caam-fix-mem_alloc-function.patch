From f943660036e1bd7829f11e30cd2f98e307a70087 Mon Sep 17 00:00:00 2001
From: Remi Koman <remi.koman@nxp.com>
Date: Fri, 13 Mar 2020 15:33:28 +0100
Subject: [PATCH 57/87] TEE-510 drivers: caam: fix mem_alloc function

Modify CAAM mem_alloc function for aligned memory allocation
to respect CAAM DMA behaviour.

Signed-off-by: Remi Koman <remi.koman@nxp.com>
---
 core/arch/arm/plat-imx/crypto_conf.mk      | 10 ++++++++++
 core/drivers/crypto/caam/utils/utils_mem.c | 13 ++++++++++---
 2 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/core/arch/arm/plat-imx/crypto_conf.mk b/core/arch/arm/plat-imx/crypto_conf.mk
index 833b9c03..97954306 100644
--- a/core/arch/arm/plat-imx/crypto_conf.mk
+++ b/core/arch/arm/plat-imx/crypto_conf.mk
@@ -28,6 +28,16 @@ CFG_DBG_CAAM_TRACE ?= 0x2
 CFG_DBG_CAAM_DESC ?= 0x0
 CFG_DBG_CAAM_BUF ?= 0x0
 
+#
+# Due to the CAAM DMA behaviour on iMX8QM & iMX8QX, 4 bytes need to be add to
+# the buffer size when aligned memory allocation is done
+#
+ifeq ($(filter y, $(CFG_MX8QM) $(CFG_MX8QX)),y)
+$(call force, CFG_CAAM_SIZE_ALIGN,4)
+else
+$(call force, CFG_CAAM_SIZE_ALIGN,1)
+endif
+
 #
 # CAAM Job Ring configuration
 #  - Normal boot settings
diff --git a/core/drivers/crypto/caam/utils/utils_mem.c b/core/drivers/crypto/caam/utils/utils_mem.c
index 46128b6a..d9ddf55f 100644
--- a/core/drivers/crypto/caam/utils/utils_mem.c
+++ b/core/drivers/crypto/caam/utils/utils_mem.c
@@ -84,19 +84,26 @@ struct __packed mem_info {
  * Allocate an area of given size in bytes. Add the memory allocator
  * information in the newly allocated area.
  *
- * @size   Size in bytes to allocate
- * @type   Type of area to allocate (refer to MEM_TYPE_*)
+ * @size_in   Size in bytes to allocate
+ * @type      Type of area to allocate (refer to MEM_TYPE_*)
  */
-static void *mem_alloc(size_t size, uint8_t type)
+static void *mem_alloc(size_t size_in, uint8_t type)
 {
 	struct mem_info *info = NULL;
 	vaddr_t ret_addr = 0;
 	void *ptr = NULL;
 	size_t alloc_size = 0;
+	size_t size = 0;
 	uint32_t cacheline_size = 0;
 
 	MEM_TRACE("alloc %zu bytes of type %" PRIu8, size, type);
 
+	/* Roundup needed to respect CAAM DMA behaviour */
+	if (type & MEM_TYPE_ALIGN)
+		size = ROUNDUP(size_in, CFG_CAAM_SIZE_ALIGN);
+	else
+		size = size_in;
+
 	/*
 	 * The mem_info header is added just before the returned
 	 * buffer address
-- 
2.17.1

