From 08aaa67b8813ae1eb60e7ad0a7938131d4111da7 Mon Sep 17 00:00:00 2001
From: Cedric Neveux <cedric.neveux@nxp.com>
Date: Tue, 10 Mar 2020 10:27:18 +0100
Subject: [PATCH 54/87] TEE-491 drivers: caam: rework RSA prime

Rename RSA primes generation function/data and file to be RSA specific.

Signed-off-by: Cedric Neveux <cedric.neveux@nxp.com>
---
 .../{caam_prime.c => caam_prime_rsa.c}        | 26 +++++++++----------
 core/drivers/crypto/caam/acipher/caam_rsa.c   |  4 +--
 core/drivers/crypto/caam/acipher/local.h      |  8 +++---
 core/drivers/crypto/caam/acipher/sub.mk       |  4 +--
 4 files changed, 21 insertions(+), 21 deletions(-)
 rename core/drivers/crypto/caam/acipher/{caam_prime.c => caam_prime_rsa.c} (98%)

diff --git a/core/drivers/crypto/caam/acipher/caam_prime.c b/core/drivers/crypto/caam/acipher/caam_prime_rsa.c
similarity index 98%
rename from core/drivers/crypto/caam/acipher/caam_prime.c
rename to core/drivers/crypto/caam/acipher/caam_prime_rsa.c
index e3f20749..9f52591b 100644
--- a/core/drivers/crypto/caam/acipher/caam_prime.c
+++ b/core/drivers/crypto/caam/acipher/caam_prime_rsa.c
@@ -2,8 +2,8 @@
 /*
  * Copyright 2018-2019 NXP
  *
- * Brief   CAAM Prime Numbering.
- *         Implementation of Prime Number functions
+ * CAAM RSA Prime Numbering.
+ * Implementation of Prime Number functions
  */
 #include <caam_common.h>
 #include <caam_desc_ccb_defines.h>
@@ -17,19 +17,19 @@
 
 #include "local.h"
 
-#define RSA_TRY_FAIL    0x42
+#define RSA_TRY_FAIL	0x42
 #define RETRY_TOO_SMALL 0x2A
 
-#define STATUS_GOOD_Q   0xCA
+#define STATUS_GOOD_Q 0xCA
 
 #ifdef CFG_CAAM_64BIT
-#define SETUP_RSA_DESC_ENTRIES   20
-#define GEN_RSA_DESC_ENTRIES     62
-#define CHECK_P_Q_DESC_ENTRIES   32
+#define SETUP_RSA_DESC_ENTRIES 20
+#define GEN_RSA_DESC_ENTRIES   62
+#define CHECK_P_Q_DESC_ENTRIES 32
 #else
-#define SETUP_RSA_DESC_ENTRIES   17
-#define GEN_RSA_DESC_ENTRIES     58
-#define CHECK_P_Q_DESC_ENTRIES   29
+#define SETUP_RSA_DESC_ENTRIES 17
+#define GEN_RSA_DESC_ENTRIES   58
+#define CHECK_P_Q_DESC_ENTRIES 29
 #endif
 
 /*
@@ -398,7 +398,7 @@ static void search_smallprime(size_t size, struct caambuf *prime)
  * @small_prime  Pre-generated small prime value
  * @desc_prime   Physical address of the prime generator descriptor
  */
-static enum caam_status do_desc_setup(uint32_t *desc, struct prime_data *data,
+static enum caam_status do_desc_setup(uint32_t *desc, struct prime_rsa *data,
 				      const struct caambuf *small_prime,
 				      const paddr_t desc_prime)
 {
@@ -481,7 +481,7 @@ static enum caam_status do_desc_setup(uint32_t *desc, struct prime_data *data,
  * @do_prime_q  Generate Prime Q
  * @desc_next   Physical address of the next descriptor (can be NULL)
  */
-static void do_desc_prime(uint32_t *desc, struct prime_data *data,
+static void do_desc_prime(uint32_t *desc, struct prime_rsa *data,
 			  const struct caambuf *small_prime, bool do_prime_q,
 			  const paddr_t desc_next)
 {
@@ -748,7 +748,7 @@ static void do_checks_primes(uint32_t *desc, const struct caambuf *p,
 	RSA_DUMPDESC(desc);
 }
 
-enum caam_status caam_prime_gen(struct prime_data *data)
+enum caam_status caam_prime_rsa_gen(struct prime_rsa *data)
 {
 	enum caam_status retstatus = CAAM_FAILURE;
 	struct caambuf small_prime = {};
diff --git a/core/drivers/crypto/caam/acipher/caam_rsa.c b/core/drivers/crypto/caam/acipher/caam_rsa.c
index 91d283a2..df160c8c 100644
--- a/core/drivers/crypto/caam/acipher/caam_rsa.c
+++ b/core/drivers/crypto/caam/acipher/caam_rsa.c
@@ -455,7 +455,7 @@ static TEE_Result do_gen_keypair(struct rsa_keypair *key, size_t key_size)
 	struct caam_jobctx jobctx = {};
 	uint32_t *desc = 0;
 	uint32_t desclen = 0;
-	struct prime_data prime = {};
+	struct prime_rsa prime = {};
 
 	RSA_TRACE("Generate Keypair of %zu bits", key_size);
 
@@ -528,7 +528,7 @@ static TEE_Result do_gen_keypair(struct rsa_keypair *key, size_t key_size)
 	prime.q = &q;
 
 	/* Generate prime p and q */
-	retstatus = caam_prime_gen(&prime);
+	retstatus = caam_prime_rsa_gen(&prime);
 	RSA_TRACE("Generate Prime P and Q returned 0x%" PRIx32, retstatus);
 	if (retstatus != CAAM_NO_ERROR) {
 		ret = TEE_ERROR_GENERIC;
diff --git a/core/drivers/crypto/caam/acipher/local.h b/core/drivers/crypto/caam/acipher/local.h
index fa751aa1..03569108 100644
--- a/core/drivers/crypto/caam/acipher/local.h
+++ b/core/drivers/crypto/caam/acipher/local.h
@@ -10,9 +10,9 @@
 #include "caam_common.h"
 
 /*
- * Prime generator structure
+ * Prime generator structure for RSA
  */
-struct prime_data {
+struct prime_rsa {
 	uint8_t        era;      /* CAAM Era version */
 	size_t         key_size; /* Key size in bits */
 	struct caambuf *e;       /* Key exponent e */
@@ -21,11 +21,11 @@ struct prime_data {
 };
 
 /*
- * Generate a Prime Number
+ * Generate RSA Prime Numbers
  * Algorithm based on the Chapter B.3.3 of the FIPS.184-6 specification
  *
  * @data  [in/out] Prime generation data
  */
-enum caam_status caam_prime_gen(struct prime_data *data);
+enum caam_status caam_prime_rsa_gen(struct prime_rsa *data);
 
 #endif /* __LOCAL_H__ */
diff --git a/core/drivers/crypto/caam/acipher/sub.mk b/core/drivers/crypto/caam/acipher/sub.mk
index 47d9229a..05a56109 100644
--- a/core/drivers/crypto/caam/acipher/sub.mk
+++ b/core/drivers/crypto/caam/acipher/sub.mk
@@ -1,6 +1,6 @@
 incdirs-y += ../include
 
 srcs-$(CFG_NXP_CAAM_ECC_DRV) += caam_ecc.c
-srcs-$(CFG_NXP_CAAM_RSA_DRV) += caam_rsa.c
+srcs-$(CFG_NXP_CAAM_RSA_DRV) += caam_rsa.c caam_prime_rsa.c
 srcs-$(CFG_NXP_CAAM_DH_DRV)  += caam_dh.c
-srcs-y += caam_prime.c caam_math.c
+srcs-y += caam_math.c
-- 
2.17.1

